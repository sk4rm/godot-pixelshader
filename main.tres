[gd_resource type="VisualShader" load_steps=57 format=3 uid="uid://cdmfj8qfgnfi4"]

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_ci82a"]

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_24q3n"]

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_vmmo2"]

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_5i7ek"]
default_input_values = [0, 1.0, 1, 0.0]
operator = 3

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_uxqhr"]
input_name = "viewport_size"

[sub_resource type="VisualShaderNodeGlobalExpression" id="VisualShaderNodeGlobalExpression_ci82a"]
size = Vector2(680, 400)
expression = "// https://www.youtube.com/watch?v=7wwE5FLZceY

uniform sampler2D DEPTH_TEXTURE : hint_depth_texture;

float get_linear_depth(vec2 uv, mat4 inv_projection_mat) {
	float depth = texture(DEPTH_TEXTURE, uv).x;
	vec3 ndc = vec3(uv * 2.0 - 1.0, depth);
	vec4 view = inv_projection_mat * vec4(ndc, 1.0);
	view.xyz /= view.w;
	return -view.z;
}"

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_24q3n"]
size = Vector2(680, 200)
expression = "depth_value = get_linear_depth(offset, INV_PROJECTION_MATRIX);"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_vmmo2"]
input_name = "screen_uv"

[sub_resource type="VisualShaderNodeVec2Constant" id="VisualShaderNodeVec2Constant_0ru1r"]
constant = Vector2(0, -1)

[sub_resource type="VisualShaderNodeLinearSceneDepth" id="VisualShaderNodeLinearSceneDepth_ci82a"]

[sub_resource type="VisualShaderNodeVec2Constant" id="VisualShaderNodeVec2Constant_t1uk1"]
constant = Vector2(0, 1)

[sub_resource type="VisualShaderNodeVec2Constant" id="VisualShaderNodeVec2Constant_oblph"]
constant = Vector2(-1, 0)

[sub_resource type="VisualShaderNodeVec2Constant" id="VisualShaderNodeVec2Constant_v11j8"]
constant = Vector2(1, 0)

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_5i7ek"]
size = Vector2(680, 200)
expression = "depth_value = get_linear_depth(offset, INV_PROJECTION_MATRIX);"

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_uxqhr"]
size = Vector2(680, 200)
expression = "depth_value = get_linear_depth(offset, INV_PROJECTION_MATRIX);"

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_tcxlh"]
size = Vector2(680, 200)
expression = "depth_value = get_linear_depth(offset, INV_PROJECTION_MATRIX);"

[sub_resource type="VisualShaderNodeMultiplyAdd" id="VisualShaderNodeMultiplyAdd_csr5i"]
default_input_values = [0, Vector2(0, 0), 1, Vector2(1, 1), 2, Vector2(0, 0)]
op_type = 1

[sub_resource type="VisualShaderNodeMultiplyAdd" id="VisualShaderNodeMultiplyAdd_80nxt"]
default_input_values = [0, Vector2(0, 0), 1, Vector2(1, 1), 2, Vector2(0, 0)]
op_type = 1

[sub_resource type="VisualShaderNodeMultiplyAdd" id="VisualShaderNodeMultiplyAdd_mfmrj"]
default_input_values = [0, Vector2(0, 0), 1, Vector2(1, 1), 2, Vector2(0, 0)]
op_type = 1

[sub_resource type="VisualShaderNodeMultiplyAdd" id="VisualShaderNodeMultiplyAdd_qhcnt"]
default_input_values = [0, Vector2(0, 0), 1, Vector2(1, 1), 2, Vector2(0, 0)]
op_type = 1

[sub_resource type="VisualShaderNodeClamp" id="VisualShaderNodeClamp_ci82a"]

[sub_resource type="VisualShaderNodeClamp" id="VisualShaderNodeClamp_24q3n"]

[sub_resource type="VisualShaderNodeClamp" id="VisualShaderNodeClamp_vmmo2"]

[sub_resource type="VisualShaderNodeClamp" id="VisualShaderNodeClamp_0ru1r"]

[sub_resource type="VisualShaderNodeSmoothStep" id="VisualShaderNodeSmoothStep_ci82a"]

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_ci82a"]
parameter_name = "depth_smooth_step_edge_0"
default_value_enabled = true
default_value = 0.25

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_24q3n"]
parameter_name = "depth_smooth_step_edge_1"
default_value_enabled = true
default_value = 0.3

[sub_resource type="VisualShaderNodeGlobalExpression" id="VisualShaderNodeGlobalExpression_24q3n"]
size = Vector2(900, 900)
expression = "// https://www.youtube.com/watch?v=7wwE5FLZceY

vec3 get_normal(vec2 uv, sampler2D normal_texture) {
	vec3 normal = texture(normal_texture, uv).rgb;
	return normal * 2.0 - 1.0;
}

float get_normal_edge_indicator(
	vec3 normal_edge_bias,
	vec3 normal,
	vec3 neighbor_normal,
	float depth_difference
) {
	float normal_difference = dot(
		normal - neighbor_normal,
		normal_edge_bias
	);
	float normal_indicator = clamp(
		smoothstep(-0.01, 0.01, normal_difference),
		0.0,
		1.0
	);
	float depth_indicator = clamp(
		sign(depth_difference * 0.25 + 0.0025),
		0.0,
		1.0
	);
	return (1.0 - dot(normal, neighbor_normal)) * depth_indicator * normal_indicator;
}"

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_vmmo2"]
size = Vector2(760, 400)
expression = "normal_difference = get_normal_edge_indicator(
	normal_edge_bias, normal, neighbor_normal, depth_difference
);"

[sub_resource type="VisualShaderNodeVec3Parameter" id="VisualShaderNodeVec3Parameter_ci82a"]
parameter_name = "normal_indicator_edge_bias"
default_value_enabled = true
default_value = Vector3(1, 1, 1)

[sub_resource type="VisualShaderNodeScreenNormalWorldSpace" id="VisualShaderNodeScreenNormalWorldSpace_ci82a"]

[sub_resource type="VisualShaderNodeScreenNormalWorldSpace" id="VisualShaderNodeScreenNormalWorldSpace_24q3n"]

[sub_resource type="VisualShaderNodeScreenNormalWorldSpace" id="VisualShaderNodeScreenNormalWorldSpace_vmmo2"]

[sub_resource type="VisualShaderNodeScreenNormalWorldSpace" id="VisualShaderNodeScreenNormalWorldSpace_t1uk1"]

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_oblph"]
size = Vector2(760, 400)
expression = "normal_difference = get_normal_edge_indicator(
	normal_edge_bias, normal, neighbor_normal, depth_difference
);"

[sub_resource type="VisualShaderNodeScreenNormalWorldSpace" id="VisualShaderNodeScreenNormalWorldSpace_5i7ek"]

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_csr5i"]
size = Vector2(760, 400)
expression = "normal_difference = get_normal_edge_indicator(
	normal_edge_bias, normal, neighbor_normal, depth_difference
);"

[sub_resource type="VisualShaderNodeScreenNormalWorldSpace" id="VisualShaderNodeScreenNormalWorldSpace_80nxt"]

[sub_resource type="VisualShaderNodeScreenNormalWorldSpace" id="VisualShaderNodeScreenNormalWorldSpace_mfmrj"]

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_qhcnt"]
size = Vector2(760, 400)
expression = "normal_difference = get_normal_edge_indicator(
	normal_edge_bias, normal, neighbor_normal, depth_difference
);"

[sub_resource type="VisualShaderNodeScreenNormalWorldSpace" id="VisualShaderNodeScreenNormalWorldSpace_kb0h4"]

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_uxqhr"]

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_tcxlh"]

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_csr5i"]

[sub_resource type="VisualShaderNodeSmoothStep" id="VisualShaderNodeSmoothStep_80nxt"]
default_input_values = [0, 0.2, 1, 0.2, 2, 0.5]

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_0ru1r"]
operator = 1

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_vmmo2"]
parameter_name = "normal_step_edge_1"
default_value_enabled = true
default_value = 0.2

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_0ru1r"]
parameter_name = "normal_step_edge_2"
default_value_enabled = true
default_value = 0.2

[sub_resource type="VisualShaderNodeClamp" id="VisualShaderNodeClamp_t1uk1"]

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_80nxt"]

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_t1uk1"]
operator = 1

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_oblph"]
operator = 1

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_v11j8"]
operator = 1

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_ci82a"]
size = Vector2(860, 300)
expression = "// Workaround from: https://github.com/godotengine/godot-proposals/issues/10868
uv_out = uv_in;
POSITION = vec4(vertex.xy, 1.0, 1.0);"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_ci82a"]
input_name = "uv"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_24q3n"]
input_name = "vertex"

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx;

uniform float normal_step_edge_1 = 0.20000000298023;
uniform float normal_step_edge_2 = 0.20000000298023;
uniform vec3 normal_indicator_edge_bias = vec3(1.000000, 1.000000, 1.000000);
uniform sampler2D normal_rough_tex_frg_52 : hint_normal_roughness_texture, repeat_disable, filter_nearest;
uniform sampler2D normal_rough_tex_frg_55 : hint_normal_roughness_texture, repeat_disable, filter_nearest;
uniform float depth_smooth_step_edge_0 = 0.25;
uniform float depth_smooth_step_edge_1 = 0.30000001192093;
uniform sampler2D depth_tex_frg_2 : hint_depth_texture;
uniform sampler2D normal_rough_tex_frg_49 : hint_normal_roughness_texture, repeat_disable, filter_nearest;
uniform sampler2D normal_rough_tex_frg_51 : hint_normal_roughness_texture, repeat_disable, filter_nearest;
uniform sampler2D normal_rough_tex_frg_46 : hint_normal_roughness_texture, repeat_disable, filter_nearest;
uniform sampler2D normal_rough_tex_frg_44 : hint_normal_roughness_texture, repeat_disable, filter_nearest;
uniform sampler2D normal_rough_tex_frg_40 : hint_normal_roughness_texture, repeat_disable, filter_nearest;
uniform sampler2D normal_rough_tex_frg_41 : hint_normal_roughness_texture, repeat_disable, filter_nearest;


// GlobalExpression:0
	// https://www.youtube.com/watch?v=7wwE5FLZceY
	
	uniform sampler2D DEPTH_TEXTURE : hint_depth_texture;
	
	float get_linear_depth(vec2 uv, mat4 inv_projection_mat) {
		float depth = texture(DEPTH_TEXTURE, uv).x;
		vec3 ndc = vec3(uv * 2.0 - 1.0, depth);
		vec4 view = inv_projection_mat * vec4(ndc, 1.0);
		view.xyz /= view.w;
		return -view.z;
	}
// GlobalExpression:1
	// https://www.youtube.com/watch?v=7wwE5FLZceY
	
	vec3 get_normal(vec2 uv, sampler2D normal_texture) {
		vec3 normal = texture(normal_texture, uv).rgb;
		return normal * 2.0 - 1.0;
	}
	
	float get_normal_edge_indicator(
		vec3 normal_edge_bias,
		vec3 normal,
		vec3 neighbor_normal,
		float depth_difference
	) {
		float normal_difference = dot(
			normal - neighbor_normal,
			normal_edge_bias
		);
		float normal_indicator = clamp(
			smoothstep(-0.01, 0.01, normal_difference),
			0.0,
			1.0
		);
		float depth_indicator = clamp(
			sign(depth_difference * 0.25 + 0.0025),
			0.0,
			1.0
		);
		return (1.0 - dot(normal, neighbor_normal)) * depth_indicator * normal_indicator;
	}

void vertex() {
// Input:3
	vec2 n_out3p0 = UV;


// Input:4
	vec3 n_out4p0 = VERTEX;


	vec2 n_out2p0;
// Expression:2
	n_out2p0 = vec2(0.0, 0.0);
	{
		// Workaround from: https://github.com/godotengine/godot-proposals/issues/10868
		n_out2p0 = n_out3p0;
		POSITION = vec4(n_out4p0.xy, 1.0, 1.0);
	}


// Output:0
	UV = n_out2p0;


}

void fragment() {
// FloatParameter:60
	float n_out60p0 = normal_step_edge_1;


// FloatParameter:61
	float n_out61p0 = normal_step_edge_2;


// Vector3Parameter:39
	vec3 n_out39p0 = normal_indicator_edge_bias;


	vec3 n_out52p0;
// ScreenNormalWorldSpace:52
	{
		vec3 __normals = textureLod(normal_rough_tex_frg_52, SCREEN_UV, 0.0).xyz;
		__normals = __normals * 2.0 - 1.0;
		n_out52p0 = mat3(INV_VIEW_MATRIX) * __normals;
	}


// Input:15
	vec2 n_out15p0 = VIEWPORT_SIZE;


// FloatOp:14
	float n_in14p0 = 1.00000;
	float n_out14p0 = n_in14p0 / n_out15p0.x;


// Vector2Constant:20
	vec2 n_out20p0 = vec2(0.000000, 1.000000);


// Input:18
	vec2 n_out18p0 = SCREEN_UV;


// MultiplyAdd:29
	vec2 n_out29p0 = fma(vec2(n_out14p0), n_out20p0, n_out18p0);


	vec3 n_out55p0;
// ScreenNormalWorldSpace:55
	{
		vec3 __normals = textureLod(normal_rough_tex_frg_55, n_out29p0, 0.0).xyz;
		__normals = __normals * 2.0 - 1.0;
		n_out55p0 = mat3(INV_VIEW_MATRIX) * __normals;
	}


// FloatParameter:35
	float n_out35p0 = depth_smooth_step_edge_0;


// FloatParameter:36
	float n_out36p0 = depth_smooth_step_edge_1;


	float n_out17p0;
// Expression:17
	n_out17p0 = 0.0;
	{
		n_out17p0 = get_linear_depth(n_out29p0, INV_PROJECTION_MATRIX);
	}


	float n_out2p0;
// LinearSceneDepth:2
	{
		float __log_depth = textureLod(depth_tex_frg_2, SCREEN_UV, 0.0).x;
	vec4 __depth_view = INV_PROJECTION_MATRIX * vec4(SCREEN_UV * 2.0 - 1.0, __log_depth, 1.0);
		__depth_view.xyz /= __depth_view.w;
		n_out2p0 = -__depth_view.z;
	}


// FloatOp:6
	float n_out6p0 = n_out17p0 - n_out2p0;


// Clamp:33
	float n_in33p1 = 0.00000;
	float n_in33p2 = 1.00000;
	float n_out33p0 = clamp(n_out6p0, n_in33p1, n_in33p2);


// Vector2Constant:19
	vec2 n_out19p0 = vec2(0.000000, -1.000000);


// MultiplyAdd:26
	vec2 n_out26p0 = fma(vec2(n_out14p0), n_out19p0, n_out18p0);


	float n_out25p0;
// Expression:25
	n_out25p0 = 0.0;
	{
		n_out25p0 = get_linear_depth(n_out26p0, INV_PROJECTION_MATRIX);
	}


// FloatOp:7
	float n_out7p0 = n_out25p0 - n_out2p0;


// Clamp:32
	float n_in32p1 = 0.00000;
	float n_in32p2 = 1.00000;
	float n_out32p0 = clamp(n_out7p0, n_in32p1, n_in32p2);


// FloatOp:10
	float n_out10p0 = n_out33p0 + n_out32p0;


// Vector2Constant:21
	vec2 n_out21p0 = vec2(-1.000000, 0.000000);


// MultiplyAdd:27
	vec2 n_out27p0 = fma(vec2(n_out14p0), n_out21p0, n_out18p0);


	float n_out23p0;
// Expression:23
	n_out23p0 = 0.0;
	{
		n_out23p0 = get_linear_depth(n_out27p0, INV_PROJECTION_MATRIX);
	}


// FloatOp:9
	float n_out9p0 = n_out23p0 - n_out2p0;


// Clamp:31
	float n_in31p1 = 0.00000;
	float n_in31p2 = 1.00000;
	float n_out31p0 = clamp(n_out9p0, n_in31p1, n_in31p2);


// Vector2Constant:22
	vec2 n_out22p0 = vec2(1.000000, 0.000000);


// MultiplyAdd:28
	vec2 n_out28p0 = fma(vec2(n_out14p0), n_out22p0, n_out18p0);


	float n_out24p0;
// Expression:24
	n_out24p0 = 0.0;
	{
		n_out24p0 = get_linear_depth(n_out28p0, INV_PROJECTION_MATRIX);
	}


// FloatOp:8
	float n_out8p0 = n_out24p0 - n_out2p0;


// Clamp:30
	float n_in30p1 = 0.00000;
	float n_in30p2 = 1.00000;
	float n_out30p0 = clamp(n_out8p0, n_in30p1, n_in30p2);


// FloatOp:11
	float n_out11p0 = n_out31p0 + n_out30p0;


// FloatOp:12
	float n_out12p0 = n_out10p0 + n_out11p0;


// SmoothStep:34
	float n_out34p0 = smoothstep(n_out35p0, n_out36p0, n_out12p0);


	float n_out53p0;
// Expression:53
	n_out53p0 = 0.0;
	{
		n_out53p0 = get_normal_edge_indicator(
			n_out39p0, n_out52p0, n_out55p0, n_out34p0
		);
	}


	vec3 n_out49p0;
// ScreenNormalWorldSpace:49
	{
		vec3 __normals = textureLod(normal_rough_tex_frg_49, SCREEN_UV, 0.0).xyz;
		__normals = __normals * 2.0 - 1.0;
		n_out49p0 = mat3(INV_VIEW_MATRIX) * __normals;
	}


	vec3 n_out51p0;
// ScreenNormalWorldSpace:51
	{
		vec3 __normals = textureLod(normal_rough_tex_frg_51, n_out26p0, 0.0).xyz;
		__normals = __normals * 2.0 - 1.0;
		n_out51p0 = mat3(INV_VIEW_MATRIX) * __normals;
	}


	float n_out50p0;
// Expression:50
	n_out50p0 = 0.0;
	{
		n_out50p0 = get_normal_edge_indicator(
			n_out39p0, n_out49p0, n_out51p0, n_out34p0
		);
	}


// FloatOp:56
	float n_out56p0 = n_out53p0 + n_out50p0;


	vec3 n_out46p0;
// ScreenNormalWorldSpace:46
	{
		vec3 __normals = textureLod(normal_rough_tex_frg_46, SCREEN_UV, 0.0).xyz;
		__normals = __normals * 2.0 - 1.0;
		n_out46p0 = mat3(INV_VIEW_MATRIX) * __normals;
	}


	vec3 n_out44p0;
// ScreenNormalWorldSpace:44
	{
		vec3 __normals = textureLod(normal_rough_tex_frg_44, n_out27p0, 0.0).xyz;
		__normals = __normals * 2.0 - 1.0;
		n_out44p0 = mat3(INV_VIEW_MATRIX) * __normals;
	}


	float n_out47p0;
// Expression:47
	n_out47p0 = 0.0;
	{
		n_out47p0 = get_normal_edge_indicator(
			n_out39p0, n_out46p0, n_out44p0, n_out34p0
		);
	}


	vec3 n_out40p0;
// ScreenNormalWorldSpace:40
	{
		vec3 __normals = textureLod(normal_rough_tex_frg_40, SCREEN_UV, 0.0).xyz;
		__normals = __normals * 2.0 - 1.0;
		n_out40p0 = mat3(INV_VIEW_MATRIX) * __normals;
	}


	vec3 n_out41p0;
// ScreenNormalWorldSpace:41
	{
		vec3 __normals = textureLod(normal_rough_tex_frg_41, n_out28p0, 0.0).xyz;
		__normals = __normals * 2.0 - 1.0;
		n_out41p0 = mat3(INV_VIEW_MATRIX) * __normals;
	}


	float n_out38p0;
// Expression:38
	n_out38p0 = 0.0;
	{
		n_out38p0 = get_normal_edge_indicator(
			n_out39p0, n_out40p0, n_out41p0, n_out34p0
		);
	}


// FloatOp:57
	float n_out57p0 = n_out47p0 + n_out38p0;


// FloatOp:58
	float n_out58p0 = n_out56p0 + n_out57p0;


// SmoothStep:59
	float n_out59p0 = smoothstep(n_out60p0, n_out61p0, n_out58p0);


// FloatOp:63
	float n_out63p0 = n_out59p0 + n_out34p0;


// Clamp:62
	float n_in62p1 = 0.00000;
	float n_in62p2 = 1.00000;
	float n_out62p0 = clamp(n_out63p0, n_in62p1, n_in62p2);


// Output:0
	ALBEDO = vec3(n_out62p0);


}
"
graph_offset = Vector2(1597.19, 299.622)
nodes/vertex/0/position = Vector2(-160, 260)
nodes/vertex/2/node = SubResource("VisualShaderNodeExpression_ci82a")
nodes/vertex/2/position = Vector2(-1120, 380)
nodes/vertex/2/size = Vector2(860, 300)
nodes/vertex/2/input_ports = "0,3,uv_in;1,4,vertex;"
nodes/vertex/2/output_ports = "0,3,uv_out;"
nodes/vertex/2/expression = "// Workaround from: https://github.com/godotengine/godot-proposals/issues/10868
uv_out = uv_in;
POSITION = vec4(vertex.xy, 1.0, 1.0);"
nodes/vertex/3/node = SubResource("VisualShaderNodeInput_ci82a")
nodes/vertex/3/position = Vector2(-1560, 420)
nodes/vertex/4/node = SubResource("VisualShaderNodeInput_24q3n")
nodes/vertex/4/position = Vector2(-1560, 620)
nodes/vertex/connections = PackedInt32Array(2, 0, 0, 4, 3, 0, 2, 0, 4, 0, 2, 1)
nodes/fragment/0/position = Vector2(6160, 2020)
nodes/fragment/2/node = SubResource("VisualShaderNodeLinearSceneDepth_ci82a")
nodes/fragment/2/position = Vector2(960, 3440)
nodes/fragment/6/node = SubResource("VisualShaderNodeFloatOp_0ru1r")
nodes/fragment/6/position = Vector2(1400, 2220)
nodes/fragment/7/node = SubResource("VisualShaderNodeFloatOp_t1uk1")
nodes/fragment/7/position = Vector2(1400, 2520)
nodes/fragment/8/node = SubResource("VisualShaderNodeFloatOp_oblph")
nodes/fragment/8/position = Vector2(1400, 3160)
nodes/fragment/9/node = SubResource("VisualShaderNodeFloatOp_v11j8")
nodes/fragment/9/position = Vector2(1400, 2820)
nodes/fragment/10/node = SubResource("VisualShaderNodeFloatOp_ci82a")
nodes/fragment/10/position = Vector2(2040, 2220)
nodes/fragment/11/node = SubResource("VisualShaderNodeFloatOp_24q3n")
nodes/fragment/11/position = Vector2(2040, 2820)
nodes/fragment/12/node = SubResource("VisualShaderNodeFloatOp_vmmo2")
nodes/fragment/12/position = Vector2(2340, 2220)
nodes/fragment/14/node = SubResource("VisualShaderNodeFloatOp_5i7ek")
nodes/fragment/14/position = Vector2(-440, 2080)
nodes/fragment/15/node = SubResource("VisualShaderNodeInput_uxqhr")
nodes/fragment/15/position = Vector2(-880, 2160)
nodes/fragment/16/node = SubResource("VisualShaderNodeGlobalExpression_ci82a")
nodes/fragment/16/position = Vector2(480, 1700)
nodes/fragment/16/size = Vector2(680, 400)
nodes/fragment/16/input_ports = ""
nodes/fragment/16/output_ports = ""
nodes/fragment/16/expression = "// https://www.youtube.com/watch?v=7wwE5FLZceY

uniform sampler2D DEPTH_TEXTURE : hint_depth_texture;

float get_linear_depth(vec2 uv, mat4 inv_projection_mat) {
	float depth = texture(DEPTH_TEXTURE, uv).x;
	vec3 ndc = vec3(uv * 2.0 - 1.0, depth);
	vec4 view = inv_projection_mat * vec4(ndc, 1.0);
	view.xyz /= view.w;
	return -view.z;
}"
nodes/fragment/17/node = SubResource("VisualShaderNodeExpression_24q3n")
nodes/fragment/17/position = Vector2(480, 2220)
nodes/fragment/17/size = Vector2(680, 200)
nodes/fragment/17/input_ports = "0,3,offset;"
nodes/fragment/17/output_ports = "0,0,depth_value;"
nodes/fragment/17/expression = "depth_value = get_linear_depth(offset, INV_PROJECTION_MATRIX);"
nodes/fragment/18/node = SubResource("VisualShaderNodeInput_vmmo2")
nodes/fragment/18/position = Vector2(-560, 3380)
nodes/fragment/19/node = SubResource("VisualShaderNodeVec2Constant_0ru1r")
nodes/fragment/19/position = Vector2(-440, 2620)
nodes/fragment/20/node = SubResource("VisualShaderNodeVec2Constant_t1uk1")
nodes/fragment/20/position = Vector2(-440, 2380)
nodes/fragment/21/node = SubResource("VisualShaderNodeVec2Constant_oblph")
nodes/fragment/21/position = Vector2(-440, 2860)
nodes/fragment/22/node = SubResource("VisualShaderNodeVec2Constant_v11j8")
nodes/fragment/22/position = Vector2(-440, 3100)
nodes/fragment/23/node = SubResource("VisualShaderNodeExpression_5i7ek")
nodes/fragment/23/position = Vector2(480, 2820)
nodes/fragment/23/size = Vector2(680, 200)
nodes/fragment/23/input_ports = "0,3,offset;"
nodes/fragment/23/output_ports = "0,0,depth_value;"
nodes/fragment/23/expression = "depth_value = get_linear_depth(offset, INV_PROJECTION_MATRIX);"
nodes/fragment/24/node = SubResource("VisualShaderNodeExpression_uxqhr")
nodes/fragment/24/position = Vector2(480, 3140)
nodes/fragment/24/size = Vector2(680, 200)
nodes/fragment/24/input_ports = "0,3,offset;"
nodes/fragment/24/output_ports = "0,0,depth_value;"
nodes/fragment/24/expression = "depth_value = get_linear_depth(offset, INV_PROJECTION_MATRIX);"
nodes/fragment/25/node = SubResource("VisualShaderNodeExpression_tcxlh")
nodes/fragment/25/position = Vector2(480, 2520)
nodes/fragment/25/size = Vector2(680, 200)
nodes/fragment/25/input_ports = "0,3,offset;"
nodes/fragment/25/output_ports = "0,0,depth_value;"
nodes/fragment/25/expression = "depth_value = get_linear_depth(offset, INV_PROJECTION_MATRIX);"
nodes/fragment/26/node = SubResource("VisualShaderNodeMultiplyAdd_csr5i")
nodes/fragment/26/position = Vector2(160, 2460)
nodes/fragment/27/node = SubResource("VisualShaderNodeMultiplyAdd_80nxt")
nodes/fragment/27/position = Vector2(160, 2820)
nodes/fragment/28/node = SubResource("VisualShaderNodeMultiplyAdd_mfmrj")
nodes/fragment/28/position = Vector2(160, 3160)
nodes/fragment/29/node = SubResource("VisualShaderNodeMultiplyAdd_qhcnt")
nodes/fragment/29/position = Vector2(160, 2080)
nodes/fragment/30/node = SubResource("VisualShaderNodeClamp_ci82a")
nodes/fragment/30/position = Vector2(1720, 3160)
nodes/fragment/31/node = SubResource("VisualShaderNodeClamp_24q3n")
nodes/fragment/31/position = Vector2(1720, 2820)
nodes/fragment/32/node = SubResource("VisualShaderNodeClamp_vmmo2")
nodes/fragment/32/position = Vector2(1720, 2520)
nodes/fragment/33/node = SubResource("VisualShaderNodeClamp_0ru1r")
nodes/fragment/33/position = Vector2(1720, 2220)
nodes/fragment/34/node = SubResource("VisualShaderNodeSmoothStep_ci82a")
nodes/fragment/34/position = Vector2(2680, 2020)
nodes/fragment/35/node = SubResource("VisualShaderNodeFloatParameter_ci82a")
nodes/fragment/35/position = Vector2(2240, 1520)
nodes/fragment/36/node = SubResource("VisualShaderNodeFloatParameter_24q3n")
nodes/fragment/36/position = Vector2(2240, 1860)
nodes/fragment/37/node = SubResource("VisualShaderNodeGlobalExpression_24q3n")
nodes/fragment/37/position = Vector2(260, 720)
nodes/fragment/37/size = Vector2(900, 900)
nodes/fragment/37/input_ports = ""
nodes/fragment/37/output_ports = ""
nodes/fragment/37/expression = "// https://www.youtube.com/watch?v=7wwE5FLZceY

vec3 get_normal(vec2 uv, sampler2D normal_texture) {
	vec3 normal = texture(normal_texture, uv).rgb;
	return normal * 2.0 - 1.0;
}

float get_normal_edge_indicator(
	vec3 normal_edge_bias,
	vec3 normal,
	vec3 neighbor_normal,
	float depth_difference
) {
	float normal_difference = dot(
		normal - neighbor_normal,
		normal_edge_bias
	);
	float normal_indicator = clamp(
		smoothstep(-0.01, 0.01, normal_difference),
		0.0,
		1.0
	);
	float depth_indicator = clamp(
		sign(depth_difference * 0.25 + 0.0025),
		0.0,
		1.0
	);
	return (1.0 - dot(normal, neighbor_normal)) * depth_indicator * normal_indicator;
}"
nodes/fragment/38/node = SubResource("VisualShaderNodeExpression_vmmo2")
nodes/fragment/38/position = Vector2(3100, 1320)
nodes/fragment/38/size = Vector2(760, 400)
nodes/fragment/38/input_ports = "0,4,normal_edge_bias;1,4,normal;2,4,neighbor_normal;3,0,depth_difference;"
nodes/fragment/38/output_ports = "0,0,normal_difference;"
nodes/fragment/38/expression = "normal_difference = get_normal_edge_indicator(
	normal_edge_bias, normal, neighbor_normal, depth_difference
);"
nodes/fragment/39/node = SubResource("VisualShaderNodeVec3Parameter_ci82a")
nodes/fragment/39/position = Vector2(2080, -200)
nodes/fragment/40/node = SubResource("VisualShaderNodeScreenNormalWorldSpace_ci82a")
nodes/fragment/40/position = Vector2(2180, 1160)
nodes/fragment/41/node = SubResource("VisualShaderNodeScreenNormalWorldSpace_24q3n")
nodes/fragment/41/position = Vector2(2260, 1300)
nodes/fragment/44/node = SubResource("VisualShaderNodeScreenNormalWorldSpace_vmmo2")
nodes/fragment/44/position = Vector2(2260, 980)
nodes/fragment/46/node = SubResource("VisualShaderNodeScreenNormalWorldSpace_t1uk1")
nodes/fragment/46/position = Vector2(2180, 840)
nodes/fragment/47/node = SubResource("VisualShaderNodeExpression_oblph")
nodes/fragment/47/position = Vector2(3100, 860)
nodes/fragment/47/size = Vector2(760, 400)
nodes/fragment/47/input_ports = "0,4,normal_edge_bias;1,4,normal;2,4,neighbor_normal;3,0,depth_difference;"
nodes/fragment/47/output_ports = "0,0,normal_difference;"
nodes/fragment/47/expression = "normal_difference = get_normal_edge_indicator(
	normal_edge_bias, normal, neighbor_normal, depth_difference
);"
nodes/fragment/49/node = SubResource("VisualShaderNodeScreenNormalWorldSpace_5i7ek")
nodes/fragment/49/position = Vector2(2180, 520)
nodes/fragment/50/node = SubResource("VisualShaderNodeExpression_csr5i")
nodes/fragment/50/position = Vector2(3100, 400)
nodes/fragment/50/size = Vector2(760, 400)
nodes/fragment/50/input_ports = "0,4,normal_edge_bias;1,4,normal;2,4,neighbor_normal;3,0,depth_difference;"
nodes/fragment/50/output_ports = "0,0,normal_difference;"
nodes/fragment/50/expression = "normal_difference = get_normal_edge_indicator(
	normal_edge_bias, normal, neighbor_normal, depth_difference
);"
nodes/fragment/51/node = SubResource("VisualShaderNodeScreenNormalWorldSpace_80nxt")
nodes/fragment/51/position = Vector2(2260, 660)
nodes/fragment/52/node = SubResource("VisualShaderNodeScreenNormalWorldSpace_mfmrj")
nodes/fragment/52/position = Vector2(2180, 200)
nodes/fragment/53/node = SubResource("VisualShaderNodeExpression_qhcnt")
nodes/fragment/53/position = Vector2(3100, -80)
nodes/fragment/53/size = Vector2(760, 400)
nodes/fragment/53/input_ports = "0,4,normal_edge_bias;1,4,normal;2,4,neighbor_normal;3,0,depth_difference;"
nodes/fragment/53/output_ports = "0,0,normal_difference;"
nodes/fragment/53/expression = "normal_difference = get_normal_edge_indicator(
	normal_edge_bias, normal, neighbor_normal, depth_difference
);"
nodes/fragment/55/node = SubResource("VisualShaderNodeScreenNormalWorldSpace_kb0h4")
nodes/fragment/55/position = Vector2(2260, 340)
nodes/fragment/56/node = SubResource("VisualShaderNodeFloatOp_uxqhr")
nodes/fragment/56/position = Vector2(4100, 700)
nodes/fragment/57/node = SubResource("VisualShaderNodeFloatOp_tcxlh")
nodes/fragment/57/position = Vector2(4100, 1280)
nodes/fragment/58/node = SubResource("VisualShaderNodeFloatOp_csr5i")
nodes/fragment/58/position = Vector2(4560, 1240)
nodes/fragment/59/node = SubResource("VisualShaderNodeSmoothStep_80nxt")
nodes/fragment/59/position = Vector2(5080, 760)
nodes/fragment/60/node = SubResource("VisualShaderNodeFloatParameter_vmmo2")
nodes/fragment/60/position = Vector2(4520, 480)
nodes/fragment/61/node = SubResource("VisualShaderNodeFloatParameter_0ru1r")
nodes/fragment/61/position = Vector2(4520, 840)
nodes/fragment/62/node = SubResource("VisualShaderNodeClamp_t1uk1")
nodes/fragment/62/position = Vector2(5860, 2020)
nodes/fragment/63/node = SubResource("VisualShaderNodeFloatOp_80nxt")
nodes/fragment/63/position = Vector2(5580, 1980)
nodes/fragment/connections = PackedInt32Array(2, 0, 9, 1, 2, 0, 8, 1, 11, 0, 12, 1, 10, 0, 12, 0, 15, 0, 14, 1, 2, 0, 6, 1, 2, 0, 7, 1, 14, 0, 26, 0, 18, 0, 26, 2, 17, 0, 6, 0, 14, 0, 27, 0, 18, 0, 27, 2, 27, 0, 23, 0, 23, 0, 9, 0, 18, 0, 28, 2, 28, 0, 24, 0, 20, 0, 29, 1, 14, 0, 29, 0, 14, 0, 28, 0, 18, 0, 29, 2, 25, 0, 7, 0, 24, 0, 8, 0, 19, 0, 26, 1, 21, 0, 27, 1, 22, 0, 28, 1, 29, 0, 17, 0, 26, 0, 25, 0, 8, 0, 30, 0, 9, 0, 31, 0, 7, 0, 32, 0, 6, 0, 33, 0, 12, 0, 34, 2, 35, 0, 34, 0, 36, 0, 34, 1, 33, 0, 10, 0, 32, 0, 10, 1, 30, 0, 11, 1, 31, 0, 11, 0, 41, 0, 38, 2, 34, 0, 38, 3, 39, 0, 38, 0, 40, 0, 38, 1, 44, 0, 47, 2, 46, 0, 47, 1, 51, 0, 50, 2, 49, 0, 50, 1, 55, 0, 53, 2, 52, 0, 53, 1, 28, 0, 41, 0, 27, 0, 44, 0, 26, 0, 51, 0, 29, 0, 55, 0, 53, 0, 56, 0, 50, 0, 56, 1, 47, 0, 57, 0, 38, 0, 57, 1, 56, 0, 58, 0, 57, 0, 58, 1, 58, 0, 59, 2, 39, 0, 47, 0, 39, 0, 50, 0, 39, 0, 53, 0, 34, 0, 47, 3, 34, 0, 50, 3, 34, 0, 53, 3, 61, 0, 59, 1, 60, 0, 59, 0, 34, 0, 63, 1, 59, 0, 63, 0, 63, 0, 62, 0, 62, 0, 0, 0)
